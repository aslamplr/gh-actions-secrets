name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Log versions
      run: |
        rustc --version
        cargo --version

    - name: Configure cargo data directory
      # Copied from denoland/deno
      # After this point, all cargo registry and crate data is stored in
      # $GITHUB_WORKSPACE/.cargo_home. This allows us to cache only the files
      # that are needed during the build process. Additionally, this works
      # around a bug in the 'cache' action that causes directories outside of
      # the workspace dir to be saved/restored incorrectly.
      run: echo "CARGO_HOME=$(pwd)/.cargo_home" >> $GITHUB_ENV

    - name: Cache
      # Copied from denoland/deno
      # https://github.com/denoland/deno/blob/0ffc99a61ddfa958a436beef0d003ecead630d0f/.github/workflows/ci.yml#L106
      uses: actions/cache@v2
      with:
        path: |-
          .cargo_home
          target/*/.*
          target/*/build
          target/*/deps
        key:
          ${{ runner.os }}-tests-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-tests-

    - name: Unit tests
      run: cargo test

  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Log versions
      run: |
        rustc --version
        cargo --version

    - name: Configure cargo data directory
      # Copied from denoland/deno
      # After this point, all cargo registry and crate data is stored in
      # $GITHUB_WORKSPACE/.cargo_home. This allows us to cache only the files
      # that are needed during the build process. Additionally, this works
      # around a bug in the 'cache' action that causes directories outside of
      # the workspace dir to be saved/restored incorrectly.
      run: echo "CARGO_HOME=$(pwd)/.cargo_home" >> $GITHUB_ENV

    - name: Cache
      # Copied from denoland/deno
      # https://github.com/denoland/deno/blob/0ffc99a61ddfa958a436beef0d003ecead630d0f/.github/workflows/ci.yml#L106
      uses: actions/cache@v2
      with:
        path: |-
          .cargo_home
          target/*/.*
          target/*/build
          target/*/deps
        key:
          ${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-

    - name: Build
      run: cargo build --release --verbose
      env:
        GH_OAUTH_CLIENT_ID: ${{ secrets.GH_OAUTH_CLIENT_ID }}
        GH_OAUTH_CLIENT_SECRET: ${{ secrets.GH_OAUTH_CLIENT_SECRET }}

    - name: Upload build artifact
      uses: actions/upload-artifact@v1
      with:
        name: gh-cli_ubuntu
        path: target/release/gh-cli


  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2

    - name: Log versions
      run: |
        rustc --version
        cargo --version

    - name: Configure cargo data directory
      # Copied from denoland/deno
      # After this point, all cargo registry and crate data is stored in
      # $GITHUB_WORKSPACE/.cargo_home. This allows us to cache only the files
      # that are needed during the build process. Additionally, this works
      # around a bug in the 'cache' action that causes directories outside of
      # the workspace dir to be saved/restored incorrectly.
      run: echo "CARGO_HOME=$(pwd)/.cargo_home" >> $GITHUB_ENV

    - name: Cache
      # Copied from denoland/deno
      # https://github.com/denoland/deno/blob/0ffc99a61ddfa958a436beef0d003ecead630d0f/.github/workflows/ci.yml#L106
      uses: actions/cache@v2
      with:
        path: |-
          .cargo_home
          target/*/.*
          target/*/build
          target/*/deps
        key:
          ${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-

    - name: Build
      run: cargo build --release --verbose
      env:
        GH_OAUTH_CLIENT_ID: ${{ secrets.GH_OAUTH_CLIENT_ID }}
        GH_OAUTH_CLIENT_SECRET: ${{ secrets.GH_OAUTH_CLIENT_SECRET }}

    - name: Upload build artifact
      uses: actions/upload-artifact@v1
      with:
        name: gh-cli_macos
        path: target/release/gh-cli
        
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Log versions
      run: |
        rustc --version
        cargo --version

    - name: Configure cargo data directory
      # Copied from denoland/deno
      # After this point, all cargo registry and crate data is stored in
      # $GITHUB_WORKSPACE/.cargo_home. This allows us to cache only the files
      # that are needed during the build process. Additionally, this works
      # around a bug in the 'cache' action that causes directories outside of
      # the workspace dir to be saved/restored incorrectly.
      run: echo "CARGO_HOME=$(pwd)/.cargo_home" >> $GITHUB_ENV

    - name: Cache
      # Copied from denoland/deno
      # https://github.com/denoland/deno/blob/0ffc99a61ddfa958a436beef0d003ecead630d0f/.github/workflows/ci.yml#L106
      uses: actions/cache@v2
      with:
        path: |-
          .cargo_home
          target/*/.*
          target/*/build
          target/*/deps
        key:
          ${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-

    - name: Build
      run: cargo build --release --verbose
      env:
        GH_OAUTH_CLIENT_ID: ${{ secrets.GH_OAUTH_CLIENT_ID }}
        GH_OAUTH_CLIENT_SECRET: ${{ secrets.GH_OAUTH_CLIENT_SECRET }}

    - name: Upload build artifact
      uses: actions/upload-artifact@v1
      with:
        name: gh-cli_windows.exe
        path: target\release\gh-cli.exe
